name: CI - Lint->Quality->Tests->Build

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  lint-and-quality:
    name: Lint & Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r dev-requirements.txt

      - name: Lint Python code
        run: |
          black --check .
          isort --check-only --settings-path=utils/config/.isort.cfg .
          flake8 jiaz/ --config=utils/config/.flake8

      - name: Check code quality
        run: |
          radon cc jiaz/ -a -s

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r dev-requirements.txt

      - name: Run tests with coverage
        run: |
          pytest --cov=jiaz --cov-report=term-missing

  build:
    needs: [lint-and-quality, test]
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build binary with PyInstaller
        run: |
          pyinstaller --clean --onefile jiaz/__main__.py --name jiaz

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: jiaz-${{ matrix.os }}
          path: dist/jiaz*
